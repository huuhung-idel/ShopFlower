@model Model.EF.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section jsFooter{
    <script>
        $('#btnImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtHinhanh').val(url);
            };
            finder.popup();
        })
        var editor = CKEDITOR.replace('txtDetail', {
            customConfig: '/Assets/Admin/js/Plugins/ckeditor/config.js',
        })
    </script>
}

<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-4 text-gray-800"><b>Add Content Product.</b></h1>
    <hr />
</div>

@using (Html.BeginForm("Create", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })

                @Html.TextBoxFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label " })

                @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group ">
            @Html.LabelFor(model => model.Descriptions, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.TextBoxFor(model => model.Descriptions, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descriptions, "", new { @class = "text-danger" })

        </div>


        <div class="form-group ">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" }, id = "txtHinhanh" })
                <a id="btnImage" href="#"> Select Image</a>
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label" })

                @Html.TextBoxFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.ViewCount, htmlAttributes: new { @class = "control-label " })

                @Html.TextBoxFor(model => model.ViewCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ViewCount, "", new { @class = "text-danger" })

            </div>


        </div>

        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

            </div>

            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label " })

                @Html.TextBoxFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } ,id="txtDetail"})
                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.IncludeVAT, htmlAttributes: new { @class = "control-label" })

                @Html.CheckBoxFor(model => model.IncludeVAT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IncludeVAT, "", new { @class = "text-danger" })

            </div>
           

        </div>
        <div class="form-row">
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(model => model.TopHot, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-sm-6">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })

                @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })

            </div>
              

        </div>
        <div class="form-row">
            <div class="form-group col-sm-6">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
